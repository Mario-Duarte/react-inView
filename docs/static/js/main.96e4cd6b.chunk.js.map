{"version":3,"sources":["themeContext.js","npm.svg","github.svg","components/header.component.js","components/hero.component.js","components/percentage.component.js","components/content.component.js","components/image.component.js","components/gallery.component.js","components/footer.component.js","App.js","reportWebVitals.js","index.js"],"names":["sizes","theme","main","colors","primaryBlue","secondaryBlue","secondaryColor","light","vapor","lightGrey","grey","darkGrey","charcoal","dark","breakpoints","mobileMax","tabletMin","tabletMax","desktopMin","maxWidth","maxWidthBlog","media","spacing","smallSpacing","mediumSpacing","largeSpacing","extraLargeSpacing","ThemeContext","React","createContext","HeaderContainer","Styled","header","props","minDesktop","minTablet","Header","title","description","Error","useContext","className","src","process","alt","href","target","rel","githubImg","npmImg","HeroContainer","section","SecondaryBlue","Hero","cta","myRef","useRef","useInView","root","rootMargin","threshold","e","elements","current","querySelectorAll","forEach","elm","classList","remove","add","ref","Percentage","options","thresholds","i","ratio","push","buildThresholdList","PercentageSection","rate","parseFloat","intersectionRatio","toFixed","innerHTML","ContentContainer","Content","map","link","url","Image","img","useState","image","setImage","imgRef","entry","contains","createElement","GalleryContainer","Gallery","images","FooterContainer","Footer","AppContainer","div","App","imagesArr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96e4cd6b.chunk.js","sourcesContent":["import React from 'react';\n\nconst sizes = {\n    mobileMax: 768,\n    tabletMin: 769,\n    tabletMax: 1023,\n    desktopMin: 1024,\n    maxWidth: 960,\n}\n\nconst theme = {\n    main : {\n        colors : {\n            primaryBlue : '#74b9ff',\n            secondaryBlue : '#c0e0ff',\n            secondaryColor: '#e55039',\n            light : '#f9f9f9',\n            vapor : '#eee',\n            lightGrey : '#ccc',\n            grey : '#999',\n            darkGrey : '#555',\n            charcoal : '#333',\n            dark : '#212121'\n        },\n        breakpoints : {\n            mobileMax: sizes.mobileMax + \"px\",\n            tabletMin: sizes.tabletMin + \"px\",\n            tabletMax: sizes.tabletMax + \"px\",\n            desktopMin: sizes.desktopMin + \"px\",\n            maxWidth: sizes.maxWidth + \"px\",\n            maxWidthBlog: sizes.maxWidth/1.5 + \"px\"\n        },\n        media : {\n            get maxMobile() {return `@media all and (max-width: ${sizes.mobileMax}px)`},\n            get minTablet() {return `@media all and (min-width: ${sizes.tabletMin}px)`},\n            get maxTablet() {return `@media all and (max-width: ${sizes.tabletMax}px)`},\n            get minDesktop() {return `@media all and (min-width: ${sizes.desktopMin}px)`}\n        },\n        spacing : {\n            smallSpacing : '10px',\n            mediumSpacing : '20px',\n            largeSpacing : '40px',\n            extraLargeSpacing : '60px',\n        }\n    }\n}\n\nconst ThemeContext = React.createContext(theme.main);\nexport default ThemeContext;","export default __webpack_public_path__ + \"static/media/npm.38f4627e.svg\";","export default __webpack_public_path__ + \"static/media/github.a3061eb1.svg\";","import {useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport npmImg from '../npm.svg';\nimport githubImg from '../github.svg';\n\nconst HeaderContainer = Styled.header`\n      width: 100%;\n      position: fixed;\n      top: 0;\n      left: 0;\n      background-color: ${props => props.theme.colors.light};\n      border-bottom: 5px ${props => props.theme.colors.secondaryColor} solid;\n      padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n      z-index: 9;\n\n      ${props => props.theme.media.minDesktop} {\n        padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n      }\n\n      .inner {\n        width: 100%;\n        margin: 0 auto;\n        max-width: ${props => props.theme.breakpoints.maxWidth};\n        display: flex;\n        flex-direction: row;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n        align-items: center;\n        h1,p {\n          margin: 0;\n        }\n\n        .logo {\n          position: relative;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          align-items: center;\n          img {\n            width: auto;\n            height: 32px;\n            border-radius: 5px;\n            margin-right: ${props => props.theme.spacing.smallSpacing};\n          }\n        }\n\n        .app-nav {\n          position: relative;\n          padding: 0;\n          margin: 0;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: nowrap;\n          justify-content: flex-end;\n          align-items: center;\n\n          li {\n            list-style: none;\n\n            &.tablet-desktop {\n              display: none;\n              ${props => props.theme.media.minTablet} {\n                display: block;\n              }\n            }\n\n            a {\n              text-decoration: none;\n              padding: 0 5px;\n              opacity: 1;\n              transition: opacity 0.2s ease-in-out;\n              img {\n                width: auto;\n                height: 24px;\n              }\n              &:hover {\n                opacity: 0.6;\n              }\n            }\n          }\n        }\n\n      }\n  `;\n\nexport default function Header({title='Default Title', description='Short description'}) {\n\n  if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n  if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n\n  const theme = useContext(ThemeContext);\n\n  return (\n    <HeaderContainer className=\"header\" theme={theme}>\n      <div className=\"inner\">\n        <div className=\"logo\">\n          <img src={process.env.PUBLIC_URL + '/logo192.png'} alt=\"inView Hook\" />\n          <h1>{title}</h1>\n        </div>\n        \n        <ul className=\"app-nav\">\n          <li className=\"tablet-desktop\">{description}</li>\n          <li><a href=\"https://github.com/Mario-Duarte/react-inView\" target=\"_blank\" rel=\"noreferrer\"><img src={githubImg} alt=\"view it on GitHub\" /></a></li>\n          <li><a href=\"https://www.npmjs.com/package/react-inview-callback\" target=\"_blank\" rel=\"noreferrer\"><img src={npmImg} alt=\"view it on NPM\" /></a></li>\n        </ul>\n      </div>\n    </HeaderContainer>\n  );\n}","import {useContext, useRef} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport useInView from 'react-inview-callback';\n\nconst HeroContainer = Styled.section`\n        width: 100%;\n        position: relative;\n        padding: ${props => props.theme.spacing.smallSpacing};\n        background-color: ${props => props.theme.colors.SecondaryBlue};\n        background: linear-gradient(45deg, ${props => props.theme.colors.primaryBlue} 0%, ${props => props.theme.colors.secondaryBlue} 100%);\n\n        ${props => props.theme.media.minDesktop} {\n            padding: ${props => props.theme.spacing.largeSpacing};\n        }\n\n        .inner {\n            width: 100%;\n            min-height: 90vh;\n            margin: 0 auto;\n            max-width: ${props => props.theme.breakpoints.maxWidthBlog};\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            color: white;\n            h1 {\n                font-weight: 800;\n            }\n            p {\n                font-size: 20px;\n                opacity: 1;\n                transform: translateY(0px);\n                transition: all 0.8s ease-in-out;\n                &.hidden {\n                    opacity: 0;\n                    transform: translateY(40px);\n                } \n                &.cta-text {\n                    text-decoration: underline;\n                }\n            }\n        }\n    `;\n\nexport default function Hero({title='Sample Title', description='Sample description in long format', cta='Do something now!'}) {\n\n    if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof cta !== 'string' ) { throw new Error(`CTA needs to be of sting type and ${typeof title} was provided.`) }\n\n    const theme = useContext(ThemeContext);\n    const myRef = useRef(null);\n\n    const options = {\n        root : 'root',\n        rootMargin : '0px',\n        threshold : 0.5\n    }\n\n    function onEntry(e) {\n        const elements = myRef.current.querySelectorAll('p');\n        [...elements].forEach((elm) => {\n            elm.classList.remove('hidden');\n        });\n    }\n\n    function onExit(e) {\n        const elements = myRef.current.querySelectorAll('p');\n        [...elements].forEach((elm) => {\n            elm.classList.add('hidden');\n        });\n    }\n\n    useInView(myRef, options, onEntry, onExit);\n\n    return(\n        <HeroContainer ref={myRef} theme={theme}>\n            <div className=\"inner\">\n                <h1>{title}</h1>\n                <p>{description}</p>\n                <p className=\"cta-text\">{cta}</p>\n            </div>\n        </HeroContainer>\n    );\n}","import {useRef, useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport useInView from 'react-inview-callback';\n\nconst Percentage = Styled.section`\n    width: 100%;\n    min-height: 50vh;\n    position: relative;\n    background-color: ${props => props.theme.colors.secondaryColor};\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n    color: ${props => props.theme.colors.light};\n\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    ${props => props.theme.media.minDesktop} {\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n    }\n\n    h1 {\n        margin: 10px;\n        font-weight: 800;\n        font-style: italic;\n        font-size: 64px;\n    }\n`;\n\nfunction buildThresholdList() {\n    const thresholds = [];\n    const steps = 100;\n\n    for (let i=1.0; i<=steps; i++) {\n        let ratio = i/steps;\n        thresholds.push(ratio);\n    }\n    \n    thresholds.push(0);\n    return thresholds;\n}\n\nconst options = {\n    root : 'root',\n    rootMargin : '0px',\n    threshold : buildThresholdList()\n}\n\nexport default function PercentageSection() {\n    const theme = useContext(ThemeContext);\n    const myRef = useRef(null);\n    useInView(myRef, options, onEntry);\n\n    function onEntry(e) {\n        const elements = myRef.current.querySelectorAll('h1')[0];\n        const rate = parseFloat(e.intersectionRatio * 100).toFixed(\"0\");\n        elements.innerHTML = rate + '%';\n    }\n\n    return(\n        <Percentage ref={myRef} theme={theme}>\n            <p>This section is</p>\n            <h1>0%</h1>\n            <p>visible in the viewport!</p>\n        </Percentage>\n    );\n}","import {useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\n\nconst ContentContainer = Styled.section`\n    width: 100%;\n    position: relative;\n    padding: ${props => props.theme.spacing.largeSpacing};\n\n    ${props => props.theme.media.minDesktop} {\n    padding: ${props => props.theme.spacing.extraLargeSpacing};\n    }\n    .inner {\n        position: relative;\n        width: 100%;\n        margin: 0 auto;\n        max-width: ${props => props.theme.breakpoints.maxWidthBlog};\n        text-align: center;\n\n        a.cta, a.cta:visited {\n            text-transform: uppercase;\n            color: ${props => props.theme.colors.secondaryColor};\n            text-decoration: underline;\n            transition: 0.6s color ease-in-out;\n            &:hover {\n                color: ${props => props.theme.colors.primaryBlue};\n            }\n        }\n\n        ${props => props.theme.media.minTablet} {\n            \n        }\n    }\n`;\n\nexport default function Content({title='', description='Short description', cta=''}) {\n\n    if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof cta !== 'object' ) { throw new Error(`The cta text needs to be of array type and ${typeof title} was provided.`) }\n\n    const theme = useContext(ThemeContext);\n\n    return (\n        <ContentContainer className=\"header\" theme={theme}>\n            <div className=\"inner\">\n                {title && <h1>{title}</h1>}\n                <p>{description}</p>\n                {cta.map((link, i) => <p><a className=\"cta\" href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.title}</a></p>)}\n            </div>\n        </ContentContainer>\n    );\n}","import React, {useRef, useState} from 'react';\nimport useInView from 'react-inview-callback';\n\nconst options = {\n    root : 'root',\n    rootMargin : '100px',\n    threshold : 0.5\n}\n\nexport default function Image({img=\"\"}) {\n\n    if ( typeof img !== 'string' ) { throw new Error(`Image needs to be of sting type and ${typeof title} was provided.`) }\n\n    const [image, setImage] = useState('');\n    const imgRef =useRef(null);\n    useInView(imgRef, options, onEntry);\n\n    function onEntry(entry) {\n        if ( !imgRef.current.classList.contains(\"loaded\") ) {\n            const myImage = React.createElement(\"img\", {\n                src: img,\n            }, null);\n            setImage(myImage);\n            imgRef.current.classList.add(\"loaded\");\n        }\n    }\n\n    return(\n        <div className=\"gallery-image\" ref={imgRef}>{image}</div>\n    )\n\n}","import {useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport Image from './image.component';\n\nconst GalleryContainer = Styled.section`\n    width: 100%;\n    position: relative;\n    padding: ${props => props.theme.spacing.largeSpacing};\n\n    ${props => props.theme.media.minDesktop} {\n        padding: ${props => props.theme.spacing.extraLargeSpacing};\n    }\n    \n    .inner {\n        position: relative;\n        width: 100%;\n        max-width: ${props => props.theme.breakpoints.maxWidth};\n        margin: 0 auto;\n        text-align: center;\n        .gallery {\n            position: relative;\n            width: 100%;\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n            justify-content: flex-start;\n\n            ${props => props.theme.media.tabletMin} {\n                justify-content: space-between;\n            }\n\n            .gallery-image {\n                position: relative;\n                width: 100%;\n                padding-top: 75%;\n                overflow: hidden;\n                background-color: ${props => props.theme.colors.lightGrey};\n                margin-bottom: ${props => props.theme.spacing.mediumSpacing};\n                img {\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    width: 100%;\n                    height: auto;\n                    z-index: 1;\n                }\n                ${props => props.theme.media.minTablet} {\n                    width: calc(50% - ${props => props.theme.spacing.smallSpacing});\n                    padding-top: 36%;\n                }\n            }\n        }\n    }\n`;\n\nexport default function Gallery({title=\"\", description=\"\", images=[\"\"]}) {\n\n    if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof images !== 'object' ) { throw new Error(`Images needs to be of array type and ${typeof title} was provided.`) }\n\n    const theme = useContext(ThemeContext);\n\n    return (\n        <GalleryContainer className=\"header\" theme={theme}>\n            <div className=\"inner\">\n                {title && <h1>{title}</h1>}\n                {description && <p>{description}</p>}\n                <div className=\"gallery\">\n                    {images.map((image, i) => <Image img={image} key={i} />)}\n                </div>\n            </div>\n        </GalleryContainer>\n    );\n}","import {useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\n\nconst FooterContainer = Styled.header`\n    width: 100%;\n    position: relative;\n    background-color: ${props => props.theme.colors.charcoal};\n    border-top: 5px ${props => props.theme.colors.secondaryColor} solid;\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n\n    ${props => props.theme.media.minDesktop} {\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n    }\n\n    .inner {\n    width: 100%;\n    margin: 0 auto;\n    max-width: ${props => props.theme.breakpoints.maxWidth};\n    h1,p {\n        margin: 0;\n        color: ${props => props.theme.colors.light};\n        & span, a {\n            color: ${props => props.theme.colors.secondaryColor};\n            &:visited, &:hover {\n                text-decoration: none;\n            }\n        }\n    }\n    }\n`;\n\nexport default function Footer() {\n\n  const theme = useContext(ThemeContext);\n\n  return (\n    <FooterContainer className=\"footer\" theme={theme}>\n        <div className=\"inner\">\n            <p>Created with <span>&lt;code&#47;&gt;</span> and <span>❤</span> by <a href=\"https://www.marioduarte.co.uk/\" target=\"_blank\" rel=\"noreferrer\">Mario Duarte</a></p>\n        </div>\n    </FooterContainer>\n  );\n}","import Styled from 'styled-components';\n//import inView from 'react-inview-callback';\nimport Header from './components/header.component';\nimport Hero from './components/hero.component';\nimport PercentageSection from './components/percentage.component';\nimport Content from './components/content.component';\nimport Gallery from './components/gallery.component';\nimport Footer from './components/footer.component';\n\nconst AppContainer = Styled.div`\n  width: 100%;\n  position: relative;\n`;\n\nexport default function App() {\n\n  const baseURL = (seed) => {return `https://picsum.photos/seed/${seed}/800/600`; };\n  const imagesArr = [];\n  const ctas = [\n    {\n      link : 'https://github.com/Mario-Duarte/react-inView',\n      title : 'View the docs'\n    },\n    {\n      link : 'https://www.npmjs.com/package/react-inview-callback',\n      title : 'View on NPM website'\n    }\n  ];\n  const gallerySize = 7;\n\n  for (let i = 1; i < gallerySize; i++) {\n    const img = baseURL(i);\n    imagesArr.push(img);\n  }\n\n  return (\n    <AppContainer className=\"App\">\n      <Header \n        title=\"inView\" \n        description=\"A custom ReactJS Hook with callbacks.\">\n      </Header>\n      <Hero \n        title=\"inView ReactJS Hook\" \n        description=\"Custom Hook that provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport (powered by the Intersection Observer API) that will run a custom callback on entry/exit leaving you the developer in full control.\"\n        cta=\"Scroll down to view it in action!\">\n      </Hero>\n      <PercentageSection/>\n      <Content title=\"Say good bye to scroll event listeners!\" description=\"Detect when your elements enters and leaves the view port as well as how much of it is currently visible with a light weight and fast solution for modern all browsers.\" cta={ctas} />\n      <Gallery title=\"Infinite ways to use it\" description=\"You can use this hook to lazy load in images in your page, making you pages load faster and progressively load content as needed!\" images={imagesArr} />\n      <Footer />\n    </AppContainer>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
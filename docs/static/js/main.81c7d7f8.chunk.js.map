{"version":3,"sources":["themeContext.js","components/header.component.js","components/hero.component.js","components/percentage.component.js","App.js","reportWebVitals.js","index.js"],"names":["sizes","theme","main","colors","primaryBlue","secondaryBlue","secondaryColor","light","vapor","lightGrey","grey","darkGrey","charcoal","dark","breakpoints","mobileMax","tabletMin","tabletMax","desktopMin","maxWidth","maxWidthBlog","media","spacing","smallSpacing","mediumSpacing","largeSpacing","ThemeContext","React","createContext","HeaderContainer","Styled","header","props","minDesktop","minTablet","Header","title","description","Error","useContext","className","HeroContainer","section","SecondaryBlue","Hero","cta","myRef","useRef","useInView","root","rootMargin","threshold","e","elements","current","querySelectorAll","forEach","elm","classList","remove","add","ref","Percentage","options","thresholds","i","ratio","push","buildThresholdList","PercentageSection","rate","parseFloat","intersectionRatio","toFixed","innerHTML","console","log","AppContainer","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c7d7f8.chunk.js","sourcesContent":["import React from 'react';\n\nconst sizes = {\n    mobileMax: 768,\n    tabletMin: 769,\n    tabletMax: 1023,\n    desktopMin: 1024,\n    maxWidth: 960,\n}\n\nconst theme = {\n    main : {\n        colors : {\n            primaryBlue : '#74b9ff',\n            secondaryBlue : '#c0e0ff',\n            secondaryColor: '#e55039',\n            light : '#f9f9f9',\n            vapor : '#eee',\n            lightGrey : '#ccc',\n            grey : '#999',\n            darkGrey : '#555',\n            charcoal : '#333',\n            dark : '#212121'\n        },\n        breakpoints : {\n            mobileMax: sizes.mobileMax + \"px\",\n            tabletMin: sizes.tabletMin + \"px\",\n            tabletMax: sizes.tabletMax + \"px\",\n            desktopMin: sizes.desktopMin + \"px\",\n            maxWidth: sizes.maxWidth + \"px\",\n            maxWidthBlog: sizes.maxWidth/1.5 + \"px\"\n        },\n        media : {\n            get maxMobile() {return `@media all and (max-width: ${sizes.mobileMax}px)`},\n            get minTablet() {return `@media all and (mine-width: ${sizes.tabletMin}px)`},\n            get maxTablet() {return `@media all and (max-width: ${sizes.tabletMax}px)`},\n            get minDesktop() {return `@media all and (min-width: ${sizes.desktopMin}px)`}\n        },\n        spacing : {\n            smallSpacing : '10px',\n            mediumSpacing : '20px',\n            largeSpacing : '40px'\n        }\n    }\n}\n\nconst ThemeContext = React.createContext(theme.main);\nexport default ThemeContext;","import {useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\n\nconst HeaderContainer = Styled.header`\n      width: 100%;\n      position: relative;\n      background-color: ${props => props.theme.colors.light};\n      border-bottom: 5px ${props => props.theme.colors.secondaryColor} solid;\n      padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n\n      ${props => props.theme.media.minDesktop} {\n        padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n      }\n\n      .inner {\n        width: 100%;\n        margin: 0 auto;\n        max-width: ${props => props.theme.breakpoints.maxWidth};\n        display: flex;\n        flex-direction: column;\n        flex-wrap: nowrap;\n        justify-content: flex-start;\n        align-items: flex-start;\n        h1,p {\n          margin: 0;\n        }\n\n        ${props => props.theme.media.minTablet} {\n          flex-direction: row;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          align-items: center;\n        }\n      }\n  `;\n\nexport default function Header({title='Default Title', description='Short description'}) {\n\n  if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n  if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n\n  const theme = useContext(ThemeContext);\n\n  return (\n    <HeaderContainer className=\"header\" theme={theme}>\n      <div className=\"inner\">\n        <h1>{title}</h1>\n        <p>{description}</p>\n      </div>\n    </HeaderContainer>\n  );\n}","import {useContext, useRef} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport useInView from 'react-inview-callback';\n\nconst HeroContainer = Styled.section`\n        width: 100%;\n        position: relative;\n        padding: ${props => props.theme.spacing.smallSpacing};\n        background-color: ${props => props.theme.colors.SecondaryBlue};\n        background: linear-gradient(45deg, ${props => props.theme.colors.primaryBlue} 0%, ${props => props.theme.colors.secondaryBlue} 100%);\n\n        ${props => props.theme.media.minDesktop} {\n            padding: ${props => props.theme.spacing.largeSpacing};\n        }\n\n        .inner {\n            width: 100%;\n            min-height: 90vh;\n            margin: 0 auto;\n            max-width: ${props => props.theme.breakpoints.maxWidthBlog};\n            display: flex;\n            flex-direction: column;\n            flex-wrap: nowrap;\n            justify-content: center;\n            align-items: center;\n            text-align: center;\n            color: white;\n            h1 {\n                font-weight: 800;\n            }\n            p {\n                font-size: 20px;\n                opacity: 1;\n                transform: translateY(0px);\n                transition: all 0.8s ease-in-out;\n                &.hidden {\n                    opacity: 0;\n                    transform: translateY(40px);\n                } \n                &.cta-text {\n                    text-decoration: underline;\n                }\n            }\n        }\n    `;\n\nexport default function Hero({title='Sample Title', description='Sample description in long format', cta='Do something now!'}) {\n\n    if ( typeof title !== 'string' ) { throw new Error(`Title needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof description !== 'string' ) { throw new Error(`Description needs to be of sting type and ${typeof title} was provided.`) }\n    if ( typeof cta !== 'string' ) { throw new Error(`CTA needs to be of sting type and ${typeof title} was provided.`) }\n\n    const theme = useContext(ThemeContext);\n    const myRef = useRef(null);\n\n    const options = {\n        root : 'root',\n        rootMargin : '0px',\n        threshold : 0.5\n    }\n\n    function onEntry(e) {\n        const elements = myRef.current.querySelectorAll('p');\n        [...elements].forEach((elm) => {\n            elm.classList.remove('hidden');\n        });\n    }\n\n    function onExit(e) {\n        const elements = myRef.current.querySelectorAll('p');\n        [...elements].forEach((elm) => {\n            elm.classList.add('hidden');\n        });\n    }\n\n    useInView(myRef, options, onEntry, onExit);\n\n    return(\n        <HeroContainer ref={myRef} theme={theme}>\n            <div className=\"inner\">\n                <h1>{title}</h1>\n                <p>{description}</p>\n                <p className=\"cta-text\">{cta}</p>\n            </div>\n        </HeroContainer>\n    );\n}","import {useRef, useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport useInView from 'react-inview-callback';\n\nconst Percentage = Styled.section`\n    width: 100%;\n    min-height: 50vh;\n    position: relative;\n    background-color: ${props => props.theme.colors.secondaryColor};\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n    color: ${props => props.theme.colors.light};\n\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    ${props => props.theme.media.minDesktop} {\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n    }\n\n    h1 {\n        margin: 10px;\n        font-weight: 800;\n        font-style: italic;\n        font-size: 64px;\n    }\n`;\n\nfunction buildThresholdList() {\n    const thresholds = [];\n    const steps = 100;\n\n    for (let i=1.0; i<=steps; i++) {\n        let ratio = i/steps;\n        thresholds.push(ratio);\n    }\n    \n    thresholds.push(0);\n    return thresholds;\n}\n\nconst options = {\n    root : 'root',\n    rootMargin : '0px',\n    threshold : buildThresholdList()\n}\n\nexport default function PercentageSection() {\n    const theme = useContext(ThemeContext);\n    const myRef = useRef(null);\n    const inView = useInView(myRef, options, onEntry);\n\n    function onEntry(e) {\n        const elements = myRef.current.querySelectorAll('h1')[0];\n        const rate = parseFloat(e.intersectionRatio * 100).toFixed(\"0\");\n        elements.innerHTML = rate + '%';\n        console.log(rate);\n    }\n\n    return(\n        <Percentage ref={myRef} theme={theme}>\n            <p>This section is</p>\n            <h1>0%</h1>\n            <p>visible in the viewport!</p>\n        </Percentage>\n    );\n}","import Styled from 'styled-components';\n//import inView from 'react-inview-callback';\nimport Header from './components/header.component';\nimport Hero from './components/hero.component';\nimport PercentageSection from './components/percentage.component';\n\nconst AppContainer = Styled.div`\n  width: 100%;\n  position: relative;\n  min-height: 300vh;\n`;\n\nexport default function App() {\n  return (\n    <AppContainer className=\"App\">\n      <Header \n        title=\"inView\" \n        description=\"A custom ReactJS Hook with callbacks.\">\n      </Header>\n      <Hero \n        title=\"inView ReactJS Hook\" \n        description=\"Custom Hook that as the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport that will run a custom callback on entry and exit.\"\n        cta=\"Scroll down to view it in action!\">\n      </Hero>\n      <PercentageSection/>\n    </AppContainer>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
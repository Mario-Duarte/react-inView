[{"/Users/marioduarte/src/sandbox/react-inView-callback/src/index.js":"1","/Users/marioduarte/src/sandbox/react-inView-callback/src/App.js":"2","/Users/marioduarte/src/sandbox/react-inView-callback/src/reportWebVitals.js":"3","/Users/marioduarte/src/sandbox/react-inView-callback/src/components/header.component.js":"4","/Users/marioduarte/src/sandbox/react-inView-callback/src/themeContext.js":"5","/Users/marioduarte/src/sandbox/react-inView-callback/src/components/hero.component.js":"6","/Users/marioduarte/src/sandbox/react-inView-callback/src/components/percentage.component.js":"7"},{"size":500,"mtime":1607606319652,"results":"8","hashOfConfig":"9"},{"size":987,"mtime":1607709288854,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607606319653,"results":"11","hashOfConfig":"9"},{"size":1736,"mtime":1607716687897,"results":"12","hashOfConfig":"9"},{"size":1466,"mtime":1607717176039,"results":"13","hashOfConfig":"9"},{"size":2950,"mtime":1607716323995,"results":"14","hashOfConfig":"9"},{"size":1876,"mtime":1607716303189,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3heoyt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/marioduarte/src/sandbox/react-inView-callback/src/index.js",[],["32","33"],"/Users/marioduarte/src/sandbox/react-inView-callback/src/App.js",[],"/Users/marioduarte/src/sandbox/react-inView-callback/src/reportWebVitals.js",[],"/Users/marioduarte/src/sandbox/react-inView-callback/src/components/header.component.js",[],"/Users/marioduarte/src/sandbox/react-inView-callback/src/themeContext.js",[],"/Users/marioduarte/src/sandbox/react-inView-callback/src/components/hero.component.js",[],"/Users/marioduarte/src/sandbox/react-inView-callback/src/components/percentage.component.js",["34"],"import {useRef, useContext} from 'react';\nimport Styled from 'styled-components';\nimport ThemeContext from '../themeContext';\nimport useInView from 'react-inview-callback';\n\nconst Percentage = Styled.section`\n    width: 100%;\n    min-height: 50vh;\n    position: relative;\n    background-color: ${props => props.theme.colors.secondaryColor};\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.mediumSpacing};\n    color: ${props => props.theme.colors.light};\n\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    ${props => props.theme.media.minDesktop} {\n    padding: ${props => props.theme.spacing.smallSpacing} ${props => props.theme.spacing.largeSpacing};\n    }\n\n    h1 {\n        margin: 10px;\n        font-weight: 800;\n        font-style: italic;\n        font-size: 64px;\n    }\n`;\n\nfunction buildThresholdList() {\n    const thresholds = [];\n    const steps = 100;\n\n    for (let i=1.0; i<=steps; i++) {\n        let ratio = i/steps;\n        thresholds.push(ratio);\n    }\n    \n    thresholds.push(0);\n    return thresholds;\n}\n\nconst options = {\n    root : 'root',\n    rootMargin : '0px',\n    threshold : buildThresholdList()\n}\n\nexport default function PercentageSection() {\n    const theme = useContext(ThemeContext);\n    const myRef = useRef(null);\n    const inView = useInView(myRef, options, onEntry);\n\n    function onEntry(e) {\n        const elements = myRef.current.querySelectorAll('h1')[0];\n        const rate = parseFloat(e.intersectionRatio * 100).toFixed(\"0\");\n        elements.innerHTML = rate + '%';\n        console.log(rate);\n    }\n\n    return(\n        <Percentage ref={myRef} theme={theme}>\n            <p>This section is</p>\n            <h1>0%</h1>\n            <p>visible in the viewport!</p>\n        </Percentage>\n    );\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":55,"column":11,"nodeType":"41","messageId":"42","endLine":55,"endColumn":17},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'inView' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]